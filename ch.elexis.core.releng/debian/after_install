#!/bin/sh
# After installation will be found under /var/lib/dpkg/info/elexis.postinst
logger "elexis post-inst running"

rm -f /usr/bin/Elexis3
ln -s /usr/lib/elexis/x86_64/Elexis3 /usr/bin/Elexis3
chown -R root:adm /usr/lib/elexis
chmod -R g+w      /usr/lib/elexis
ICOFILE=/usr/lib/elexis/Elexis3.png

# Source debconf library.
. /usr/share/debconf/confmodule

# Create Elexis-3 desktop information
DESKTOP_ROOT=/usr/share/applications
# DESKTOP_ROOT=/tmp
# ELEXIS_DB_NAMES="xxx zz"
# ELEXIS_DB_PASSWORD=dummy
export DESKTOP="${DESKTOP_ROOT}/elexis.desktop"
logger "$0: Creating '$DESKTOP'"
cat > $DESKTOP <<EOF
[Desktop Entry]
Comment=Elexis mit default Parametern
Exec=/usr/bin/Elexis3
Icon=$ICOFILE
Name=Elexis-3.1
NoDisplay=false
Path[$e]=
StartupNotify=true
Terminal=0
TerminalOptions=
Type=Application
X-KDE-SubstituteUID=false
X-KDE-Username=
Categories=MedicalSoftware;Office
EOF

# Fetching configuration from debconf
db_get elexis/db_type
if test $? -ne 0
then
  msg="$0: could not get variable elexis/db_type"
  logger $msg
  echo $msg
  exit 2
fi
ELEXIS_DB_TYPE=$RET

db_get elexis/db_server
if test $? -ne 0
then
  msg="$0: could not get variable elexis/db_server"
  logger $msg
  echo $msg
  exit 2
fi
ELEXIS_DB_SERVER=$RET

db_get elexis/db_password
if test $? -ne 0
then
  msg="$0: could not get variable elexis/db_password"
  logger $msg
  echo $msg
  exit 2
fi
ELEXIS_DB_PASSWORD=$RET

db_get elexis/db_names
if test $? -ne 0
then
  msg="$0: could not get variable elexis/db_names"
  logger $msg
  echo $msg
  exit 2
fi
ELEXIS_DB_NAMES=$RET

for db_name in $ELEXIS_DB_NAMES
do
  OUTFILE="/usr/bin/Elexis3-$db_name"
  logger "$0: Creating '$OUTFILE'. Server is $ELEXIS_DB_SERVER ($ELEXIS_DB_TYPE)"
cat > $OUTFILE <<EOF
#!/bin/sh -v
logger "$0: Starting elexis for database $db_name"
/usr/lib/elexis/x86_64/Elexis3 -clean -debug -data ~/elexis/data-$db_name -console -consoleLog --use-config=$db_name -vmargs -Dch.elexis.dbUser=elexis -Dch.elexis.dbPw=$ELEXIS_DB_PASSWORD  -Dch.elexis.dbFlavor=$ELEXIS_DB_TYPE  -Dch.elexis.dbSpec=jdbc:$ELEXIS_DB_TYPE://${ELEXIS_DB_SERVER}/$db_name -Dorg.eclipse.swt.internal.gtk.cairoGraphics=false
set result=$?
logger "$0: Done with elexis database $db_name in $PWD with result $result"
EOF
chmod +x $OUTFILE
export DESKTOP="${DESKTOP_ROOT}/Elexis-$db_name.desktop"
logger "$0: Creating '$DESKTOP'"
cat > $DESKTOP <<EOF
[Desktop Entry]
Comment=Elexis-3 mit Datenbank $db_name auf $ELEXIS_DB_SERVER
Exec=$OUTFILE
Icon=$ICOFILE
Name=Elexis-3.1 DB $db_name
NoDisplay=false
Path[$e]=
StartupNotify=true
Terminal=0
TerminalOptions=
Type=Application
X-KDE-SubstituteUID=false
X-KDE-Username=
Categories=MedicalSoftware;Office
EOF
  if test "$ELEXIS_DB_SERVER" = "localhost"
  then
    if test "$ELEXIS_DB_TYPE" = "mysql"
    then
      logger "$0 should create mysql database"
      echo "Not yet implemented to create a MySQL database named $db_name"
    fi
   else
    if dpkg -l "postgresql-server*" | grep ii
    then
      logger "$0 postgresql-server seems present"
      sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -w $db_name
      if test $? -ne 0
      then
        sudo -u postgres psql -c "create database $db_name encoding 'utf8' template template0;"
        sudo -u postgres psql -c "create user elexis with UNENCRYPTED password '$ELEXIS_DB_PASSWORD';"
        sudo -u postgres psql -c "grant all privileges on database $db_name to elexis ;"
        logger "$0 created database $db_name"
      else
        logger "$0 Database $db_name seems to exists already"
      fi
    else
      logger "$0 finished. NO postgresql-server server package found"
    fi
  fi
done
logger "$0 finished. Created $ELEXIS_DB_TYPE databases '$ELEXIS_DB_NAMES'"
