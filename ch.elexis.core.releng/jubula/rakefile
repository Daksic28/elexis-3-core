#
ImageName = 'ngiger/jenkins-slave'
Version = '0.1.2' # Must be kept in sync with $default in jenkins-slave.pp
Origin  = '/opt/downloads/jubula_8.0/installer-jubula_linux-gtk-x86_64.sh'

desc "Build the docker image using Jubula-Installer from #{File.exists?(Origin) ? 'existing' : 'missing (download or adapt the rakefile)'} #{Origin} "
task :build do
  dest = "#{Dir.pwd}/docker/installer-jubula_linux-gtk-x86_64.sh"
  FileUtils.cp_p(Origin, dest) unless File.exists?(dest)
  exit 2 unless File.exists?(dest)
  cmd = "docker build -t #{ImageName}:#{Version} docker"
  puts cmd
  system(cmd)
end

desc 'run bash (interactively) inside the docker image'
task :run do
  folder = File.expand_path(File.join(Dir.pwd, '..', '..'))
  cmd = "docker run -i -t -v #{folder}:#{folder} #{ImageName}:#{Version} /bin/bash"
  puts cmd
  system(cmd)
end

desc './run_jenkins.rb inside the docker (user jenkins enforced inside and outside docker)'
task :jenkins do
  folder = File.expand_path(File.join(Dir.pwd, '..', '..'))
  uid = File.stat(folder).uid
  cmd = "docker run -u  #{uid} -t -v #{folder}:#{folder} #{ImageName}:#{Version} #{Dir.pwd}/run_jenkins_in_docker.sh"
  puts cmd
  system(cmd)
end

desc 'Install everything in the current system'
task :install => [:build] do
  cmd = "sudo puppet apply jenkins-slave.pp"
  puts "Will run #{cmd}"
  system(cmd)
end