h1. Wiki

See also our "Wiki":https://bitbucket.org/ngiger/jubula-elexis/wiki/Home

h2. Using the Jubula GUI

* Install Jubula Standalone Version 8.0 from "Bredex":http://testing.bredex.de/ (Subscribe necessary, no costs involved)
* @cd ch.elexis.core.releng/ && mvn clean install && cd jubula@
* @export WORKSPACE=${PWD}@
* @jubula -data workspace/ &@  # Launch jubula
* unzip the needed rcp-plugins 
* Launch Jubulas auxillary program @autagent@
* @jubula -data workspace/ &@ Start the Jubula GUI

# In Jubula select Test..Import and select the @ElexisDemo1.0.xml@ file.
# Connect to the agent
# Enter in "Test..Properties" the correct path for the AUT (elexis)
!images/jubula_2.png!
!images/jubula_3.png!
!images/jubula_4.png!
# Start the AUT
# Skip the dialog about warning
!images/jubula_2.png!
# Run the test-suite @sample@

I recommend installing the "Jubula database drivers" (via the Marketplace) and use either MySQL or PostgreSQL as the database for development.

The automated tests (via Ruby) use the embedded H2 in the subdirectory database of the workspace.

Tested under Debian Wheezy

h2. contributor hints

* After installing xmllint I added in my .git/commit/pre-commit the line @@exec ch.elexis.core.releng/jubula/format_xml.rb ch.elexis.core.releng/jubula/*.xml@@ to prettify the test.xml

h3. requirements

* Jubula 7.1.00054
* Java7
* Ruby >= 1.9.0
** gem xml-simple
** gem zip

h2. Running via Jenkins-CI

Running the GUI-tests via Jenkins-CI consumed much time to find the best setup. Here my experiences.

Common steps for each slave
* Install Java version 1.7.55
* Install maven 3.0.5
* Install Ruby 1.9 or above
* Install git 1.8 or above
* Install jubula 8.0 
** Linux: under /opt/jubula_*version*
** MacOSX: under /Applications/jubula_*version*
** Windows: under  C:\Programm Files\jubula_*version*  or E:\jubula_*version*

Verify manually that the following commands run (which we will run via Jenkins CI)
* @git checkout https://github.com/elexis/elexis-3-core.git && cd elexis-3-core@
* @mvn clean install -Pall-arch -Dmaven.test.skip@
* @cd ch.elexis.core.releng/jubula && ruby ./run_jenkins.rb@
OS-specific considerations

h3. Windows slave

Setup a Virtual Machine. Launching slave "Slaves":https://srv.elexis.info/jenkins/computer/windows-7/. Using "Launch" start agent from web-browser.

h3. MacOSX slave

Use xvfb (Installed via X11-Server from the developpers tools). Using "Launch" start agent from web-browser. Xvfb-setup binary /usr/X11/bin/xvfb. I was unable to run the tests using an ssh-shell from another computer to MacOSX or using launchctl to run @java -jar slave.jar -noCertificateCheck -jnlpUrl https://srv.elexis.info/jenkins/computer/MacOSX-64-bit/slave-agent.jnlp@

Tried xvfb Shutdown Xvfb with whole job, not just with the main build action, 	Xvfb installation.

It is also necessary to ensure that the MacOSX does enter sleep mode or active the screen saver or the builds get stuck.

h3. Linux slave

Linux has no problems running the tests fully headless. In an ssh shell I started the slave using @wget --timestamping https://srv.elexis.info/jenkins/jnlpJars/slave.jar && java -jar slave.jar -noCertificateCheck -jnlpUrl https://srv.elexis.info/jenkins/computer/MacOSX-64-bit/slave-agent.jnlp@ -noCertificateCheck only because srv.elexis.info has no official Certificate.


TODO: Use daemontools
